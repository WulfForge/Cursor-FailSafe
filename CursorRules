# FailSafe Core Rules

## Safety Rules
- Always validate chat content for hallucinations, ambiguity, and drift before responding
- Never delete or modify workspace files without verified backups and explicit user confirmation
- Block all destructive commands (delete, remove, rm, del) unless backup is verified and directory confirmed

## Validation Rules
- Verify file existence before making claims about files, directories, or paths
- Check actual file content before claiming what files contain
- Validate file modification times, sizes, and directory structures before stating them
- Confirm compilation status, test results, and build outcomes before reporting them
- Verify implementation claims are based on actual code, not assumptions

## Quality Rules
- Detect and flag absolute statements (always, never, every, all, none) for review
- Validate performance claims against actual measurements and benchmarks
- Ensure version consistency across package.json, README.md, and CHANGELOG.md
- Monitor for vague offers and repetitive confirmation patterns that slow workflow

## Workflow Rules
- Proceed with work unless explicitly told to wait - avoid unnecessary stalling
- Provide clear, step-by-step explanations for beginner guidance requests
- Ensure comprehensive error analysis and systematic troubleshooting
- Follow structured planning approaches for product discovery and strategy
- Maintain best practices for dependency management, testing, and documentation

## Anti-Hallucination Rules
- Never make claims about files without reading them first
- Don't assume file contents, sizes, or modification times
- Avoid phrases like "I can see", "there is", "I found" without verification
- When uncertain, admit limitations rather than making assumptions
- Always base responses on actual workspace state, not assumptions 